---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: restricted
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["workload.linkerd.io"]
  resources: ["externalworkloads"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "get", "update", "patch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU9LWUhPa2g0Sy9xd0pVMFQzNzRVR0F3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNalF3TmpBMU1EYzBNelEzV2hjTk1qVXdOakExTURjME16UTNXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUx6UGk0ZjMrRzFXSnNJNExSczRrWmtDa3YyZ3Vyc1BIZjVFUjB0RTA4WTd5MWpPN0ROYwpVbFYvcGtISjdBUG1yTndzMWliUCtOSXpzeXlzLzNpaHQwQmdWWHBKQ09ZLzIyRWllazdCU2s2am9Rc2pSZDBzCjllU05yOFc2NlAzcVQ2c3FLNzVsSXAxU2MvWU9ld0R3RVRuWmRtVE4xRnZYWTRmbWlIWTRLa3U1NFYzT0FaRGIKeFRkeENTRnp6WjJ6RjVzWmNGTE10TWxqd2pTNFhBSTBOcENlQ0M5Y3R0YVBBaE5BaFVkYm5aZ2dTS0dTNHVGdgpsWGtqS29xZ0hxRTBoOEp2a3E2Q3dZc3VVTnd3eEE0ZCtrcXlGNzdFeUhhSHB4V0x6MzFycVM0THBKa0lOM3dRCk9JaUpMaTEvMkY2ejFUZXJVYWgzMEIxUC9heFNCSEU3UmdNQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCN3FxOXJWMlo2OExYWitzRVNDT2wrUUxRRTFSb0x3bTNjdzhaS2orT0IKclV6bGFQalhnUlk1emNCK2c0Y0l2NENnY1FzdVQwN3g3Nms1YXVIMFpHZ0I4TFAwMTFkQi9CSmlQK2RncE81QgpMTVZERnUvMks5V3V2dFo5SW1hU3BQSVBwTHhpQVRLbjRONnJLMDM1SHZFZnptU0pCNU81RXFtbVBhRkRsT2QzCng4aU5MWjk3L3JiTmJyQWlIUHQ3NENad3Q0LzdOTElINlVNZ0dJd2JhRFIwUGlnY01jZVFWcTBEM29BdkVaemcKUmpwREdQaHhKa2NRTHhDWVo2QytpMkFCME1xMnRuSTZwQmNMZE1LZkJMNFp4cjJPbXd4ME92SGhNWTRWQ2c1UApkeS8vc0dhd1BlOTVFMDF0TWkrQkszazMvTklNajBvMXlDdjdoWDJwcXVXTwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdk0rTGgvZjRiVlltd2pndEd6aVJtUUtTL2FDNnV3OGQva1JIUzBUVHhqdkxXTTdzCk0xeFNWWCttUWNuc0ErYXMzQ3pXSnMvNDBqT3pMS3ovZUtHM1FHQlZla2tJNWovYllTSjZUc0ZLVHFPaEN5TkYKM1N6MTVJMnZ4YnJvL2VwUHF5b3J2bVVpblZKejlnNTdBUEFST2RsMlpNM1VXOWRqaCthSWRqZ3FTN25oWGM0QgprTnZGTjNFSklYUE5uYk1YbXhsd1VzeTB5V1BDTkxoY0FqUTJrSjRJTDF5MjFvOENFMENGUjF1ZG1DQklvWkxpCjRXK1ZlU01xaXFBZW9UU0h3bStTcm9MQml5NVEzRERFRGgzNlNySVh2c1RJZG9lbkZZdlBmV3VwTGd1a21RZzMKZkJBNGlJa3VMWC9ZWHJQVk42dFJxSGZRSFUvOXJGSUVjVHRHQXdJREFRQUJBb0lCQUhENWhyWE83RGtQNlpVZwo0K3g3eHJMVlZYcXBKOUl4MDNLSERGbS9UekE0S3c1eWtlYVJnVHBqYk9uRWxwSW0vcHVud0dQczRTZDFnK3BoCmdXTis4QlYzRHU1aXNRNkVleEg5L1UwT1h4WDYxcXZCYVZaVVJyV0JDZ0c0T3gxampGUVFvYWdFLzljK3RPQXYKL2UycnQ4THptZUhyUHZ2TlAyTGIwQjljc0FJcXFhWXljVUJOMnA4ckYwUTNlelo4dndxSVhudHN0MHNpNG1nbgo2L1JzNnFoSW14d1o4SkI4QTlaUlZ6d2czaU9DZFVNZzhLTWJQMEVSRzlxWENlci8wWkxTQ3NBWGw0cHAvRGhLClZ3bTRpY3BkQmJqM1V0Sko3dGpsUTVCdG5LTjlVQWdzcnNnZ3BHUmZUZ3FlZjYvOGtaV3o1MG92WEZqMGFrS3AKL2hFUlBzRUNnWUVBMUFER2dIT25MSHdTMms0WDY3NmVCVXArcThYTXB4YUNJZTR6SkNROUt1d2RHcnhEYzM2RApZOGJwUnUzVnRoeVVTS3RseXROUjV5VFUxblpaTS9OMVM5WmRHRXB6aUFDZm9lSExEOG9wcEZqeERyUWlFMzZNCjRtMFB5Y0trM0RRb0NIL0NpbW5sK0JWVElkbi9Ra0daQzhIVDBrWFpqNGwxMStjWkx3dTg0VkVDZ1lFQTQvNmQKNFdBUGxwalZ6ZVh5VXVCTC9aS2IvUXhCTTNqc0Q2NHBSZkNUOXhqRzhOYjJJdlg4b0pnUHFFZnl3VW9wdm9NRQpGYmU4QjFJZmh4ZlpRNjllSkVrZG9aWDFuRFdxckRIOURCSUhac2dMeSsvWmlHVm0xSGJYdW9uelRiVG1CMEhjClFFcWN3U0QrOWJaMFZscjNCeC9yZm1mSXlYeVJPMVV4NzFpU2ZSTUNnWUJNbXM4ZllTcjZEd2M4N05VRjhVWG0KUVluT0JkWXlWaGJGcmUyNjFJRnB2aEd5Tkc3bkQ4TG9UZHJETDNOMnI1TUJReld2K1hYeDRNUXJqbTRqTUlpawowNXVtQ0ZrQXZzRHYzTWZrTjdlZVZDa2VtQVpzSnVFL2ZBc2xhM2pvdk12dWJrUGNnZkdBR0N5RzRkK3prRUorCkZoYTFOMW9xM0kvQmFSY1hnZFZKVVFLQmdRQ0FDeEVUNytVUlNNaGFtRmVkWDhhTnBIYmlpSzFkZ1AzaVdJZHAKZGhGRFpyRGp0WFlLY0dmdXNUZXA1SzViQzVHaUl1WjZZL08va01tUUR6Ni9tbytlaFVtVTVDbEtENEhJcjFKVQpJeFB4RDB4QXZuVkcrdHZqV3RNUk9rUmdVY1lXTVZERzhxQlNmbnR4OTRRaXMzZWtrcktwRFJSZ3hBcTBiY1piCml6eko3UUtCZ0RGT2NNb21BYURicDFmMWlLR3BVbkx5MjNtdEplUFFGcDVqeXkzMTZUaVk1dTMvYXZPQzBFejEKVWI3eE5PaW1raFMrZlpNRjZMbUJqV2UyNjJqSkJrU1BBQkY0RzlSS2h0QVN5WVUvandiZkdrYk9VY2FBWVV1SQpaUDVyeE5vODdqSy9scWg4WHJ0VVJ4WjdMZDM3czM4NU5UUjRvZkJ6Z1JpcnYwaVg0UDF3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU9LWUhPa2g0Sy9xd0pVMFQzNzRVR0F3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNalF3TmpBMU1EYzBNelEzV2hjTk1qVXdOakExTURjME16UTNXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUx6UGk0ZjMrRzFXSnNJNExSczRrWmtDa3YyZ3Vyc1BIZjVFUjB0RTA4WTd5MWpPN0ROYwpVbFYvcGtISjdBUG1yTndzMWliUCtOSXpzeXlzLzNpaHQwQmdWWHBKQ09ZLzIyRWllazdCU2s2am9Rc2pSZDBzCjllU05yOFc2NlAzcVQ2c3FLNzVsSXAxU2MvWU9ld0R3RVRuWmRtVE4xRnZYWTRmbWlIWTRLa3U1NFYzT0FaRGIKeFRkeENTRnp6WjJ6RjVzWmNGTE10TWxqd2pTNFhBSTBOcENlQ0M5Y3R0YVBBaE5BaFVkYm5aZ2dTS0dTNHVGdgpsWGtqS29xZ0hxRTBoOEp2a3E2Q3dZc3VVTnd3eEE0ZCtrcXlGNzdFeUhhSHB4V0x6MzFycVM0THBKa0lOM3dRCk9JaUpMaTEvMkY2ejFUZXJVYWgzMEIxUC9heFNCSEU3UmdNQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCN3FxOXJWMlo2OExYWitzRVNDT2wrUUxRRTFSb0x3bTNjdzhaS2orT0IKclV6bGFQalhnUlk1emNCK2c0Y0l2NENnY1FzdVQwN3g3Nms1YXVIMFpHZ0I4TFAwMTFkQi9CSmlQK2RncE81QgpMTVZERnUvMks5V3V2dFo5SW1hU3BQSVBwTHhpQVRLbjRONnJLMDM1SHZFZnptU0pCNU81RXFtbVBhRkRsT2QzCng4aU5MWjk3L3JiTmJyQWlIUHQ3NENad3Q0LzdOTElINlVNZ0dJd2JhRFIwUGlnY01jZVFWcTBEM29BdkVaemcKUmpwREdQaHhKa2NRTHhDWVo2QytpMkFCME1xMnRuSTZwQmNMZE1LZkJMNFp4cjJPbXd4ME92SGhNWTRWQ2c1UApkeS8vc0dhd1BlOTVFMDF0TWkrQkszazMvTklNajBvMXlDdjdoWDJwcXVXTwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUtjaXQ5dEtuVlNhdThXTUZrSURsK293RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJME1EWXdOVEEzTkRNME4xb1hEVEkxTURZd05UQTNORE0wTjFvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeFM4Zk1yRERUVlg3ODR1ckhmTDVIZ2tYMzJjUU4zeU5mNjZGRDRLZAoxMjRrNTQwQ1haYnRkVW1CdGcrME5vR1JrOVhVV0RWbHVvV1JYem1qRWdYWnR1RDJSSEVRNFV6S0dMOVcyNGF1Cm10STdlellWTlplMldxaXB4d0NDbmgvcUNGb01kTmZ5ekNnZmhLM29nb2pDa2dXMnRMdEVXWEhEendReWtvQnQKeDk0UW84a29lS3dKY0tPS0tZaU5GVG8zT2ZJWmtueEtsVS9uSU92bEdiZVpCUUdyc2FCNXVGMDdKRTZFMEFMVApCTm1DeFA4MnU1VmI5cStRSmJxYnQ4YnRndmVSMnhXdjdSanN3aHVZMW9MTDNMQzZYMGJmTzlsU1BmSHNJWmQrCkNXb1o3NFBBd21qWVBRd1JOL1BVNVJ2ZnFZN2JPM3VyVUhiMnN2SzhyWVJnaXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3F4YnFPemtFUWEyQ0pJenE2aXVwc012V2EKaTYzbTh6T2QrVFFBNVJRNG1NZjRGQkRmK1duKzBLdTdXaDFlUStJNzhST3R1RmRIWHY4UGFUdDh2OXZ5K01XWgphV0FjNURMSXU5WTN3WWZnWTBQRUtIa002aUR4WWs2QTVMcnlNcklZQnB4cHA5cEl6Vi8ydjBFODM3Ujg5NEJ2ClJtKzFlT1BIYjd2MFVxZFF6Nkcza2VDMU9OMTJpaDB3K2pUSlFuMmN5MTdMR2ZlcHYvd0RyVFRtaSs0dEFvRlUKeDZFUDNZT2pMZExsdzk2T203bnMxWlZSWUxxN0QyVzhhNFJiQzQ4eEVGS1NNZEZ6RHBDbHlXanNIdTE4M3N0WQpOejFpckFBUG80ZHpLRUFZZmFWSE9KZ3RXOXdPZ29GWkhZVHc0d2dxNW5ta1BsUWJ2azlqZyt2bVdTamkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFM4Zk1yRERUVlg3ODR1ckhmTDVIZ2tYMzJjUU4zeU5mNjZGRDRLZDEyNGs1NDBDClhaYnRkVW1CdGcrME5vR1JrOVhVV0RWbHVvV1JYem1qRWdYWnR1RDJSSEVRNFV6S0dMOVcyNGF1bXRJN2V6WVYKTlplMldxaXB4d0NDbmgvcUNGb01kTmZ5ekNnZmhLM29nb2pDa2dXMnRMdEVXWEhEendReWtvQnR4OTRRbzhrbwplS3dKY0tPS0tZaU5GVG8zT2ZJWmtueEtsVS9uSU92bEdiZVpCUUdyc2FCNXVGMDdKRTZFMEFMVEJObUN4UDgyCnU1VmI5cStRSmJxYnQ4YnRndmVSMnhXdjdSanN3aHVZMW9MTDNMQzZYMGJmTzlsU1BmSHNJWmQrQ1dvWjc0UEEKd21qWVBRd1JOL1BVNVJ2ZnFZN2JPM3VyVUhiMnN2SzhyWVJnaXdJREFRQUJBb0lCQUdzamJHY2xoaWlLRktqQwo5Y29ERC9xUzVFYTlnQ0UxNnNnNmNnLzRYMzBEV3NmNVpSU25BZ1RkV0w0c2tEV2hkeEVGZVNnb2MwckNjamQwCllMZFZPSE5XamxpbnVvMUFKUHNIVTlGWnY1dGRxWFlMNzhBNzI1Z3MxbnJMT3kxaGw4N0w1c0xCNXltb2oxK1AKQXF1U1ZXM3o3czhLaFZ1NEpiVmd5WDJ5akhPd3J4dmRhWlhHSkx1UEdQVHhmYzc2bHIyVko1VXBjTXNxbWEvRwp1emJYNXIvaVhLUlNmMS9XUUh4QmNUUU5QdWREbEgxZ2tkYlRReDRhQ3U0ZXZnT1p0R21UTytOR09lUVFud1hTClhBUERwVHpPVzhBM2tTNTZlaXF1eU9pMlBQQ0YrUkhBVkdqcnFqd0VQN0ZzQmMrRkRwdXNMOXNXRmZ4TnlPWnIKa2JmUVRXa0NnWUVBejQ5eUhFWnlxenZUaER6dElSQWN0K2hWN3RzSEFkR2pDRE9xb3AwM25GUnJRcFpIYkhXagp5MGNvTHNuWXFmUnBvU1ZpTEllUmNRUS9kNjVCUkJEajQ4REYwRENlSTc4dVFSV0I0Y2kyWjdreGdBQ1VFWitLCjQrNEI1UnVLRFpmWVN4U3ZHWU5qeWZrTVVzd3IrRXM0cExTTHp5bEs3eFNNTzlJWm5OS21Nc2NDZ1lFQTh6UEEKeUhjbjhlYzZZRm1CZkRFNXFxZHRuWnJZVU5HdkpwMWRsNmNQSkNjZlJsQTdCbFB1U0V4UFFPMXNadWJvcGE0bwpJS3g3NEliNjF1K2ZSWWhkRXhobkMvSzdZRjNIVmNnZ0NDMEdCUTBYVnhSVXhkaU41SGtDZzRlYm4xY29OMURXCm91akhFNW92MEJnc0pHR2VabWtYRUxURWFITEpWNGVFMzQ4cVlCMENnWUVBaVlleUE3eEdST0hxWUdnQ2MvTDYKSkgzbFd0UjBpeWIrVVBQekw3YmUzMDRzbUQxOWJBZHpGY0c3aFcwbmpFMndKQi9pTWtGT0JNWGN6QStCblhsWApsMVRuZmZDSkNJU29RR1hnM3R1Z3lZK3psZTVNTG5VNWtaZm1WNG5zNnQ3ZmFiaDE0WURuQVRCdGt2dEljMGhjCmF2NWEyVlN5RzBMUlBONFZMSTJEcEljQ2dZQnF1ZE5vSmFKSjdnY1lNUzg1cVFCOWUyd0hOZVNuMHR6aVBUek4KU0dyRW1zYUd2TDZxVURySlQzT1lNcGpYcjQxNDU2eUVhaTBTb3ltQkdUYno5SnVqdlptN0RKSmQvOGx5UTVpSwovZmNlVUZobHhtNU5SSE5BU0RwcUxpQ0ZGR0o1bytnTkpjbjNPRHF6UDJoZnJ0Y3NhZ0hOT3diV0wwbGNPQVIvCmR2eEpvUUtCZ1FDazhHaU1EeWc3NWo3U01scU1QZHR4eEF3Qk1FYllUaXdjQzZ0UkYzZEZ1elJpL2QvekFmTUgKRFg1UU41cjdtS1h4eE9FdUlwbUJPK0VKRHJ6ZVkrcmVYNzVuVWh1ZG5DZ0ZBNGxwTk1Qanl5NHpLRlNBUWdXaApXYk9iajBJaEdYbU5RbHl2T1BtNld2R3hyWnRLT1BjYnJFTE5zUmlBMTN6aDlObnU2UE1yZ3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUtjaXQ5dEtuVlNhdThXTUZrSURsK293RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJME1EWXdOVEEzTkRNME4xb1hEVEkxTURZd05UQTNORE0wTjFvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeFM4Zk1yRERUVlg3ODR1ckhmTDVIZ2tYMzJjUU4zeU5mNjZGRDRLZAoxMjRrNTQwQ1haYnRkVW1CdGcrME5vR1JrOVhVV0RWbHVvV1JYem1qRWdYWnR1RDJSSEVRNFV6S0dMOVcyNGF1Cm10STdlellWTlplMldxaXB4d0NDbmgvcUNGb01kTmZ5ekNnZmhLM29nb2pDa2dXMnRMdEVXWEhEendReWtvQnQKeDk0UW84a29lS3dKY0tPS0tZaU5GVG8zT2ZJWmtueEtsVS9uSU92bEdiZVpCUUdyc2FCNXVGMDdKRTZFMEFMVApCTm1DeFA4MnU1VmI5cStRSmJxYnQ4YnRndmVSMnhXdjdSanN3aHVZMW9MTDNMQzZYMGJmTzlsU1BmSHNJWmQrCkNXb1o3NFBBd21qWVBRd1JOL1BVNVJ2ZnFZN2JPM3VyVUhiMnN2SzhyWVJnaXdJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3F4YnFPemtFUWEyQ0pJenE2aXVwc012V2EKaTYzbTh6T2QrVFFBNVJRNG1NZjRGQkRmK1duKzBLdTdXaDFlUStJNzhST3R1RmRIWHY4UGFUdDh2OXZ5K01XWgphV0FjNURMSXU5WTN3WWZnWTBQRUtIa002aUR4WWs2QTVMcnlNcklZQnB4cHA5cEl6Vi8ydjBFODM3Ujg5NEJ2ClJtKzFlT1BIYjd2MFVxZFF6Nkcza2VDMU9OMTJpaDB3K2pUSlFuMmN5MTdMR2ZlcHYvd0RyVFRtaSs0dEFvRlUKeDZFUDNZT2pMZExsdzk2T203bnMxWlZSWUxxN0QyVzhhNFJiQzQ4eEVGS1NNZEZ6RHBDbHlXanNIdTE4M3N0WQpOejFpckFBUG80ZHpLRUFZZmFWSE9KZ3RXOXdPZ29GWkhZVHc0d2dxNW5ta1BsUWJ2azlqZyt2bVdTamkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["gateway.networking.k8s.io"]
    apiVersions: ["*"]
    resources:
    - httproutes
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - workload.linkerd.io
    resources:
      - externalworkloads
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQVBMd1FGN2xpVEFCZ0dCOFNHdVplR013RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TkRBMk1EVXdOelF6TkRSYUZ3MHlOVEEyTURVd056UXpORFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFgvbEJaaWtKQS8wZ1I4dTUrNFJMbTVucnZnb3FOckhYeDBlbGErZDVhMGgrSApYcFBiUmdOR3RsbmFueEV4QU5jc2xQQ2xIa01jKzZxaS9xa05VN3EzQWNVZ00vZUw5bVlFNXEvOW16Mk9xOEZMClVSVDZSTHFGSmt3a1hPTjA1bkE0S2UvV3ZDMnZtZVJCckthSGNYOFdyRndaNWt0RGprLzcrQ2RQOHkxaHdnVEsKNytYYkx0UVphVS9SUnNDOEVya3B0QkdQckpETHBvQUp3U2o0OEhrUXhNYUtORGdBM3JJekpIVkdDbWtldmRxLwo1WGZuUXdYSXpwVWdSUnJueEFKNFBRTDhPdjMwQTBjRjdwdzhrV0ZvT2tWeThuT1g5UFJ6T0pNdDBONE9Qc2Z3Cll2cDlsTVVIaDRzNEVyaXYrZkszR1BGaUh1cGlSS3VWZWNPSkpqMEhBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUMreHlqUmwrRHFSZktYS2NPNzRLSWo3aVMvRjlYVDVXSWIKR1Z0bkpwRDd4SUd5Zzd0d0Y5YkJia21ZbDVnNnRza3RUVTB6bFI1MWREYW4wLzd5QlRkbTRpbk5mejZlamlFWQplYng3Wlk4K1hNYWpPQWx3dEZBcWNhcy95Z0xrbjZwaitRbGhmb3dNLzBya3U5WUZ1ZmZOSFpJWlpVUitNM1UrCjVYUFVMSVhyNDZMaEVseWhHVUhDdUU4NEFQVzRrTmk2RURSajFSbWFvbHh2RGoweVg1RU5YQmYxS3FDZHQwdm8KdkdHTjR2VWpqaDBOQmh0Y0FtQW15YTRmSTlrOUlpQTRmTnR6elhOMkROVkgzREtIeHF4a2svSWxRVEp1d0tFNwpLcWFpb2tySHptTlRDR2ZRMHFxNWFGaU9TQzZUK2FWNlgzbnYrWEVycVd4OURkclpVN2ovCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMS81UVdZcENRUDlJRWZMdWZ1RVM1dVo2NzRLS2pheDE4ZEhwV3ZuZVd0SWZoMTZUCjIwWURSclpaMnA4Uk1RRFhMSlR3cFI1REhQdXFvdjZwRFZPNnR3SEZJRFAzaS9abUJPYXYvWnM5anF2QlMxRVUKK2tTNmhTWk1KRnpqZE9ad09DbnYxcnd0cjVua1FheW1oM0YvRnF4Y0dlWkxRNDVQKy9nblQvTXRZY0lFeXUvbAoyeTdVR1dsUDBVYkF2Qks1S2JRUmo2eVF5NmFBQ2NFbytQQjVFTVRHaWpRNEFONnlNeVIxUmdwcEhyM2F2K1YzCjUwTUZ5TTZWSUVVYTU4UUNlRDBDL0RyOTlBTkhCZTZjUEpGaGFEcEZjdkp6bC9UMGN6aVRMZERlRGo3SDhHTDYKZlpURkI0ZUxPQks0ci9ueXR4anhZaDdxWWtTcmxYbkRpU1k5QndJREFRQUJBb0lCQVFDRTZGbDY3NGViUlRxTQp5T2FXcmxxYU9JSzNOS1diVGQ3NW9VZ3RrZ21QNnpJNWN5b2FTSGVsb0htai9ETnc2dXA4NVYwNnpXZFF3MCtaCm9vaFZ5Z3JmcDdncis2NDhzcTdPSDBGMkZYdUllZ21rRmMySnZwYmpiZEIybzYzVzlpRmhmZlMyTnU4SjJmRkoKdERwNHA0OGpYWVlDN2VHc1BUcmNlak4rajgyQ0UrWXF2RXRMZjlrL015SjhvN1FUYmpFZDE0Vjg2TENibDAwYwo3TXVZMVpPMUx2b2VSSzhhQ1V5RzFkV20wbEd1aFhTVDJTUUV1QVRoRUpmZDBFUWRiVXB0Q1YzQWp5VE9LMHFUCkxRTHZtbW95a2Y0ZVFUMlpzOXpkR0hUM2c0RDIvM21ob0JRbXNVdi9LemdYS1J0OGtsYjdndVcrM2UyaEhSRm0KeUV2aHZYdHBBb0dCQVBzRWFPMHRhYkF4c1JsYUF0eWFZREhvbXZUV1pNWGpwV0l6Q0NQUWF6cTY1VFhBSmdBawpyVzNsS1hIUDlQbUNubVNuK1d5VldkM1R1L2oybm40MW1seXFmNXRjSERMUFBzYThGd0d5ZGdad2VPNzlnaG5PCmxXN2REbG9uRU14RVZBK3Fqcmc4WkphTU5SMzdlM3cyQzRGVVcxdkF2UUM2OHlIcm5sckJlM0d0QW9HQkFOeEgKN0k5Vzg5YXBQdGJJUjB1bjJhUlNjWU9JOEVGY01CMExOejRYSnFXZTRPV1NzRW9QMmN5UE9WcnIyUHh6TFQrdQpraGxKWkREMVdWanRabTduRlpIT0dMKytkV0s5bjNzSkhQczhldUlFZUNJa2QyNEdWTDdZeEdlMTVEZ0tDdW5VCjc3QzlEbEQvOEZqTEdyMU01OGxkY204YThjT1NNQVhZbC82YmtJZ0RBb0dBTUVHVnhscmZvWTY4QkNxb3VDNDUKWmY3WW8wOEFDb2NNQ1VmVVBjWllodTdkRjZzNzR2VXFIaUZiQ1ZVNFBDdGZOZXlRNTg0Q2U4R3p0bFg2L0RwagoxWUsxaTNGMnZsSFhPSzk2SU1wbEpESEZIZlRBYVNPczJLWklsdzVCalhOcFVhV3hVRHZUL3BrdnNQYmlzMnRVClpPV0p0cWJqN3RzQjJMaUtOZHBTVi9VQ2dZQVIyNTdZN0FLdWwxL3B4NmpJQUY2TGpNZDVFMlB1Mkl0cC8xdkcKSTloVk92RWVpMnJSUmtHdzdMZUlvSEFoM3pCKzVpY2Y5Nnd3citORGExT1BrQnBXaksvQzg2ek9pWExoWlphOAo0MlZPNTIvWnpMMEY1V3QvWVZGaTJ3TWFhKzRBa091eGwxSU96UUR1SWVFVUVhVUUxUmVPM0U5WFBJVzZJNW9HCjRST3hnd0tCZ0RqeC9BdnRqdWpWV1RaRVJQRmk4Smp5K3lzRkdvK0IyeE9Qd00vWVlraGkra3Y0Y1hRRUpVMVcKbjZlSkZ1TWJJL0ZLK1N0L09ac093d2ZEWno1TmFKd1JwVEtPdFMxRThLajRSSVBCQ1ZEcnlxT2VoZUtGaXZIagp6OEFFZzJZWC9rMEFHeGlrNEEyWU4rbEtIL1QzUisrSXBVYkFEWEFIbnc1UC9Wdm9hdFJLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQVBMd1FGN2xpVEFCZ0dCOFNHdVplR013RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TkRBMk1EVXdOelF6TkRSYUZ3MHlOVEEyTURVd056UXpORFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFgvbEJaaWtKQS8wZ1I4dTUrNFJMbTVucnZnb3FOckhYeDBlbGErZDVhMGgrSApYcFBiUmdOR3RsbmFueEV4QU5jc2xQQ2xIa01jKzZxaS9xa05VN3EzQWNVZ00vZUw5bVlFNXEvOW16Mk9xOEZMClVSVDZSTHFGSmt3a1hPTjA1bkE0S2UvV3ZDMnZtZVJCckthSGNYOFdyRndaNWt0RGprLzcrQ2RQOHkxaHdnVEsKNytYYkx0UVphVS9SUnNDOEVya3B0QkdQckpETHBvQUp3U2o0OEhrUXhNYUtORGdBM3JJekpIVkdDbWtldmRxLwo1WGZuUXdYSXpwVWdSUnJueEFKNFBRTDhPdjMwQTBjRjdwdzhrV0ZvT2tWeThuT1g5UFJ6T0pNdDBONE9Qc2Z3Cll2cDlsTVVIaDRzNEVyaXYrZkszR1BGaUh1cGlSS3VWZWNPSkpqMEhBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUMreHlqUmwrRHFSZktYS2NPNzRLSWo3aVMvRjlYVDVXSWIKR1Z0bkpwRDd4SUd5Zzd0d0Y5YkJia21ZbDVnNnRza3RUVTB6bFI1MWREYW4wLzd5QlRkbTRpbk5mejZlamlFWQplYng3Wlk4K1hNYWpPQWx3dEZBcWNhcy95Z0xrbjZwaitRbGhmb3dNLzBya3U5WUZ1ZmZOSFpJWlpVUitNM1UrCjVYUFVMSVhyNDZMaEVseWhHVUhDdUU4NEFQVzRrTmk2RURSajFSbWFvbHh2RGoweVg1RU5YQmYxS3FDZHQwdm8KdkdHTjR2VWpqaDBOQmh0Y0FtQW15YTRmSTlrOUlpQTRmTnR6elhOMkROVkgzREtIeHF4a2svSWxRVEp1d0tFNwpLcWFpb2tySHptTlRDR2ZRMHFxNWFGaU9TQzZUK2FWNlgzbnYrWEVycVd4OURkclpVN2ovCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli edge-24.5.5
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
    cniEnabled: true
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controller:
      podDisruptionBudget:
        maxUnavailable: 1
    controllerGID: -1
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: edge-24.5.5
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationController:
      meshedHttp2ClientProtobuf:
        keep_alive:
          interval:
            seconds: 10
          timeout:
            seconds: 3
          while_idle: true
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    disableIPv6: true
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeat: null
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      additionalEnv: null
      experimentalEnv: null
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yNDA2MDUwNzQzMzRaFw0yNTA2MDUwNzQzNTRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEIk1c+2iLbELi4kotPA0yePdAaG+g33WNkOd41gdFp71wnfIjfTp85h0z9cu8
            ApUl2RhYVtuYnlAPe35bUhIgGqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTH52iy6agtKvwdY8m6hnYEAF/0nzAKBggqhkjOPQQDAgNIADBFAiBUk8La3cgs
            ZQnND93xVUXpRhQNRz6zf8z2BGieJVAlugIhANuYFmP8HLVRMpsEPvZ7PSN4gjrA
            2xLLn4OezrrVZq2o
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yNDA2MDUwNzQzMzRaFw0yNTA2MDUwNzQzNTRaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEIk1c+2iLbELi4kotPA0yePdAaG+g33WNkOd41gdFp71wnfIjfTp85h0z9cu8
      ApUl2RhYVtuYnlAPe35bUhIgGqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTH52iy6agtKvwdY8m6hnYEAF/0nzAKBggqhkjOPQQDAgNIADBFAiBUk8La3cgs
      ZQnND93xVUXpRhQNRz6zf8z2BGieJVAlugIhANuYFmP8HLVRMpsEPvZ7PSN4gjrA
      2xLLn4OezrrVZq2o
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: edge-24.5.5
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      - ::/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      additionalEnv: null
      await: false
      capabilities: null
      control:
        streams:
          idleTimeout: 5m
          initialTimeout: 3s
          lifetime: 1h
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      experimentalEnv: null
      gid: -1
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      livenessProbe:
        initialDelaySeconds: 10
        timeoutSeconds: 1
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      nativeSidecar: false
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      readinessProbe:
        initialDelaySeconds: 2
        timeoutSeconds: 1
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 0
        periodSeconds: 1
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.4.0
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsGroup: 65534
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      additionalEnv: null
      caBundle: ""
      crtPEM: ""
      experimentalEnv: null
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    revisionHistoryLimit: 10
    spValidator: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlOREEyTURVd056UXpNelJhRncweU5UQTJNRFV3TnpRek5UUmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVJazFjKzJpTGJFTGk0a290UEEweWVQZEFhRytnMzNXTmtPZDQxZ2RGcDcxd25mSWpmVHA4NWgwejljdTgKQXBVbDJSaFlWdHVZbmxBUGUzNWJVaElnR3FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVEg1Mml5NmFndEt2d2RZOG02aG5ZRUFGLzBuekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJVazhMYTNjZ3MKWlFuTkQ5M3hWVVhwUmhRTlJ6NnpmOHoyQkdpZUpWQWx1Z0loQU51WUZtUDhITFZSTXBzRVB2WjdQU040Z2pyQQoyeExMbjRPZXpyclZacTJvCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBNSWVmU0YwVHhOODBrRkFNWnhPcERabmY5U3YzUzhyTnU5a205ay9yNmxvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSWsxYysyaUxiRUxpNGtvdFBBMHllUGRBYUcrZzMzV05rT2Q0MWdkRnA3MXduZklqZlRwOAo1aDB6OWN1OEFwVWwyUmhZVnR1WW5sQVBlMzViVWhJZ0dnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yNDA2MDUwNzQzMzRaFw0yNTA2MDUwNzQzNTRaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEIk1c+2iLbELi4kotPA0yePdAaG+g33WNkOd41gdFp71wnfIjfTp85h0z9cu8
    ApUl2RhYVtuYnlAPe35bUhIgGqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTH52iy6agtKvwdY8m6hnYEAF/0nzAKBggqhkjOPQQDAgNIADBFAiBUk8La3cgs
    ZQnND93xVUXpRhQNRz6zf8z2BGieJVAlugIhANuYFmP8HLVRMpsEPvZ7PSN4gjrA
    2xLLn4OezrrVZq2o
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.5.5
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-24.5.5
        linkerd.io/proxy-version: edge-24.5.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 71b32b10ccf846d852c7a3034e3fdcfff962dccb56998b5b5139ed350f1349d0
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "[::]:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "[::]:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "[::]:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - name: linkerd-network-validator
        image: cr.l5d.io/linkerd/proxy:edge-24.5.5
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        command:
          - /usr/lib/linkerd/linkerd2-network-validator
        args:
          - --log-format
          - plain
          - --log-level
          - debug
          - --connect-addr
          - 1.1.1.1:20001
          - --listen-addr
          - 0.0.0.0:4140
          - --timeout
          - 10s
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.5.5
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 9214bcbe0d209fc28cf9e312bf266893e90bc4ed650a94d471002f57e921ea8b
        linkerd.io/created-by: linkerd/cli edge-24.5.5
        linkerd.io/proxy-version: edge-24.5.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 71b32b10ccf846d852c7a3034e3fdcfff962dccb56998b5b5139ed350f1349d0
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "[::]:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "[::]:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "[::]:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-ipv6=false
        - -enable-pprof=false
        - --meshed-http2-client-params={"keep_alive":{"interval":{"seconds":10},"timeout":{"seconds":3},"while_idle":true}}
        image: cr.l5d.io/linkerd/controller:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=[::]:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=[::]:8090
        - --server-addr=[::]:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0,::/0
        image: cr.l5d.io/linkerd/policy-controller:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - name: linkerd-network-validator
        image: cr.l5d.io/linkerd/proxy:edge-24.5.5
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        command:
          - /usr/lib/linkerd/linkerd2-network-validator
        args:
          - --log-format
          - plain
          - --log-level
          - debug
          - --connect-addr
          - 1.1.1.1:20001
          - --listen-addr
          - 0.0.0.0:4140
          - --timeout
          - 10s
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.5.5
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
spec:
  concurrencyPolicy: Replace
  schedule: "53 07 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli edge-24.5.5
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:edge-24.5.5
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-24.5.5
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: df1f8800c99c3e68f31ba7c425f82af5ed1960f58c6d033e94383bbc0e1b6085
        linkerd.io/created-by: linkerd/cli edge-24.5.5
        linkerd.io/proxy-version: edge-24.5.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 71b32b10ccf846d852c7a3034e3fdcfff962dccb56998b5b5139ed350f1349d0
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "[::]:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "[::]:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "[::]:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-24.5.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - name: linkerd-network-validator
        image: cr.l5d.io/linkerd/proxy:edge-24.5.5
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        command:
          - /usr/lib/linkerd/linkerd2-network-validator
        args:
          - --log-format
          - plain
          - --log-level
          - debug
          - --connect-addr
          - 1.1.1.1:20001
          - --listen-addr
          - 0.0.0.0:4140
          - --timeout
          - 10s
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-24.5.5
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: Y25pRW5hYmxlZDogdHJ1ZQppZGVudGl0eToKICBpc3N1ZXI6CiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU5EQTJNRFV3TnpRek16UmFGdzB5TlRBMk1EVXdOelF6TlRSYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUVJazFjKzJpTGJFTGk0a290UEEweWVQZEFhRytnMzNXTmtPZDQxZ2RGcDcxd25mSWpmVHA4NWgwejljdTgKICAgICAgICBBcFVsMlJoWVZ0dVlubEFQZTM1YlVoSWdHcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCVEg1Mml5NmFndEt2d2RZOG02aG5ZRUFGLzBuekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJVazhMYTNjZ3MKICAgICAgICBaUW5ORDkzeFZVWHBSaFFOUno2emY4ejJCR2llSlZBbHVnSWhBTnVZRm1QOEhMVlJNcHNFUHZaN1BTTjRnanJBCiAgICAgICAgMnhMTG40T2V6cnJWWnEybwogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJUE1JZWZTRjBUeE44MGtGQU1aeE9wRFpuZjlTdjNTOHJOdTlrbTlrL3I2bG9Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRUlrMWMrMmlMYkVMaTRrb3RQQTB5ZVBkQWFHK2czM1dOa09kNDFnZEZwNzF3bmZJamZUcDgKICAgICAgICA1aDB6OWN1OEFwVWwyUmhZVnR1WW5sQVBlMzViVWhJZ0dnPT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCmlkZW50aXR5VHJ1c3RBbmNob3JzUEVNOiB8CiAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgTUlJQmlEQ0NBUzZnQXdJQkFnSUJBVEFLQmdncWhrak9QUVFEQWpBY01Sb3dHQVlEVlFRREV4RnBaR1Z1ZEdsMAogIGVTNXNhVzVyWlhKa0xqQWVGdzB5TkRBMk1EVXdOelF6TXpSYUZ3MHlOVEEyTURVd056UXpOVFJhTUJ3eEdqQVkKICBCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNECiAgUWdBRUlrMWMrMmlMYkVMaTRrb3RQQTB5ZVBkQWFHK2czM1dOa09kNDFnZEZwNzF3bmZJamZUcDg1aDB6OWN1OAogIEFwVWwyUmhZVnR1WW5sQVBlMzViVWhJZ0dxTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNQjBHQTFVZEpRUVcKICBNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCiAgQkJUSDUyaXk2YWd0S3Z3ZFk4bTZobllFQUYvMG56QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQlVrOExhM2NncwogIFpRbk5EOTN4VlVYcFJoUU5SejZ6Zjh6MkJHaWVKVkFsdWdJaEFOdVlGbVA4SExWUk1wc0VQdlo3UFNONGdqckEKICAyeExMbjRPZXpyclZacTJvCiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
